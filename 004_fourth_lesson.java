Так, один из приципов SOLID - открытость/закрытость.
Предполагаю, что одним из примеров будет являться экспорт отчётов в разных форматах (PDF, CSV, JSON). 
Допустим имеется класс-интерфейс общий для самого отчёта. Он закрыт и его изменение может сломать всю систему.  
Также будет закрытым сервис, который использует данный интерфейс. Ему не важен конкретный формат отчёта, но он также должен быть стабильным и не меняться.
А открытыми должны являться конкретные реализации интерфейса как отчётов, чтобы можно было гибко решать задачу по формату отчётов. Теоретически они могут добавлять поведение, не ломая структуру.
Таким образом в системе можно добавлять новые классы, но не менять весь существующий код.
