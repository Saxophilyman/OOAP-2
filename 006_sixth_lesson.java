1. Существуют ли ситуации, когда связи между модулями должны делаться публичными?
Возможно в случае их тесного взаимодействия и когда их вызовы между собой должны быть доступными. 
Если говорить в одностороннем порядке, то в каком-то смысле все общедоступные сквозные модули должны быть публичными (например логгеры или ломбок)

2. Какие метрики вы бы предложили для количественной оценки принципов организации модулей?
Не совсем понимаю данный вопрос. По количественной оценке - сколько приципов соблюдается?

  GPT предлагает следующие варианты: 
  1. Сцепление (Coupling Between Modules — CBM)
  Что измеряет:
  Сколько других модулей использует данный модуль.

  2. Связность (Cohesion Within Module — CWM)
  Что измеряет:
  Насколько классы/функции внутри модуля взаимосвязаны по смыслу(чем выше, тем лучше).

  3. Размер модуля (Module Size)
  Что измеряет:
  Количество классов, строк кода, функций внутри модуля.

  4. Instability (I) — по Роберту Мартину
  I = Fan-out / (Fan-in + Fan-out)
  Fan-in — сколько модулей зависят от текущего;
  Fan-out — от скольких модулей зависит текущий.

  5. Abstractness (A) — насколько модуль абстрактен
  A = число абстрактных/интерфейсных типов / общее число типов
  Чем выше — тем модуль более расширяемый и гибкий.
  Чем ниже — это скорее модуль реализации.

  6. Distance from Main Sequence (D)
  D = |A + I - 1|
  Если D ≈ 0 — модуль сбалансирован: стабильный и абстрактный, или нестабильный и конкретный.
  Если D → 1 — модуль плохо организован.

  7. Fan-in / Fan-out
  Fan-in: сколько модулей зависят от данного (переиспользуемость);
  Fan-out: от скольких модулей зависит этот модуль (связность).

  Совершенно другой подход в понимании и мне интересен эталонный вариант ответа.
  Пока просто сохраню это здесь.

    
3. Если вы разрабатывали программы, в которых было хотя бы 3-5 классов, как бы вы оценили их модульность по этим метрикам?
Если оценивать по выданным метрикам свой проект, в результате будет много материала, чтобы в последующем подумать и разобраться.
Даже если взять рефакторинг с т.з. луковичной архитектуры многое было написано достаточно наивно.
В целом конечно преобладает высокая связность за счёт чего изменения были очень трудоёмкими.
Связность на мой взгляд была средней, в основном, как и размер.
Стабильность/нестабильность скорее средняя. Низкая абстрактность.
6 и 7 пункт явно хуже среднего и оптимального результата
